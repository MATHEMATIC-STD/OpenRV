# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CMake on a single platform

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  DRV_DEPS_QT5_LOCATION: '${{ github.workspace }}/qt/'
  MSYS: 'winsymlinks:nativestrict'

jobs:
  install_Qt5:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    runs-on: windows-latest
    steps:
    - name: Init cache QT
      id: init_qt_cache
      uses: actions/cache/@v3
      with:
        path: ${{ env.DRV_DEPS_QT5_LOCATION }}
        key: ${{ runner.os }}-qt-5.15.2

    - name: MSVC
      uses: ilammy/msvc-dev-cmd@v1.4.1
      
    - name: Install Qt
      if: steps.init_qt_cache.outputs.cache-hit != 'true'
      uses: jurplel/install-qt-action@v3
      with:
        version: '5.15.2'
        host: 'windows'
        target: 'desktop'
        arch: 'win64_msvc2019_64'
        dir: '${{ github.workspace }}/qt/'
        install-deps: 'true'
        modules: 'qtcharts qtwebengine qtquick3d'
        archives: 'qtbase qtsvg'
        cache: 'false'
        cache-key-prefix: 'install-qt-action'
        setup-python: 'true'
        set-env: 'true'
        tools-only: 'false'
        aqtversion: '==3.1.*'
        py7zrversion: '==0.20.*'
        extra: '--external 7z'

  setup_MSYS2:
    needs: install_Qt5
    runs-on: windows-latest
    steps:
    - uses: shogo82148/actions-setup-perl@v1
      with:
        perl-version: '5.34'

    - name: MSYS2
      uses: msys2/setup-msys2@v2

    - shell: msys2 {0}
      run: |
        pacman -S --needed --noconfirm \
          mingw-w64-x86_64-autotools \
          mingw-w64-x86_64-cmake \
          mingw-w64-x86_64-glew \
          mingw-w64-x86_64-libarchive \
          mingw-w64-x86_64-make \
          mingw-w64-x86_64-meson \
          mingw-w64-x86_64-python-pip \
          mingw-w64-x86_64-python-psutil \
          mingw-w64-x86_64-toolchain \
          bison \
          flex \
          git \
          nasm \
          p7zip \
          patch \
          unzip \
          zip
          
          SETUPTOOLS_USE_DISTUTILS=stdlib pip install py7zr
          cd /c/msys64 && ln -sfr . msys64
          cd /c/Qt && ln -sfr . Qt && ln -sfr . Qt5.15.2
  build:
    runs-on: windows-latest
    needs: setup_MSYS2
    steps:
    - uses: actions/checkout@v4
    - name: Init cache QT
      id: init_qt_cache
      uses: actions/cache/@v3
      with:
        path: ${{ env.DRV_DEPS_QT5_LOCATION }}
        key: ${{ runner.os }}-qt-5.15.2

    - name: Configure MSYS2
      shell: msys2 {0}
      run: |
        cd /c
        git clone --recursive https://github.com/AcademySoftwareFoundation/OpenRV.git
        cd /c/OpenRV
        source ./rvcmds.sh
        rvbootstrap Release
        rvinst

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v1
      with: 
        path: './docs/.vitepress/dist'

    - name: Test
      working-directory: /c/OpenRV/_install
      
